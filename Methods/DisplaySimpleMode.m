function handles = DisplaySimpleMode(handles,type_analysis,pop_callback)

%On supprime l'ancien affichage
delete(handles.panel_analysis);

%On change le titre affich?dans le panel immuable
set(handles.static_name_analysis,'String',[type_analysis,' ','Analysis creator (Simple Mode)']);

%On créer le panel analysis
handles.panel_analysis=uipanel('Tag','panel_analysis',...
	'Parent',handles.panel_principal,...
	'units','pixels',...
    'Position',[7,140,392,245]);

%On récupère les coordonnées du panel analysis
pos_panel_analysis=get(handles.panel_analysis,'Position');

%On génère les statics texts en fonction du type d'analysis
if isequal(type_analysis,'.AC')
	liste_contenu_static_texts={'Name of source',...
		'Node + to connect','Node - to connect','DC value',...
		'Type of variation','Number of points / Decade',...
        'Start frequency','Stop frequency'};
elseif isequal(type_analysis,'.LSTB')	
	liste_contenu_static_texts={'Loop mode',...
		'Source 1',...
        'Source 2 (for diff/comm mode)'};
elseif isequal(type_analysis,'.NOISE')	
	liste_contenu_static_texts={'Nodal voltage/ Branch current',...
		'Input reference voltage source ',...
		'freq points per noise summary '};
elseif isequal(type_analysis,'.HB')	
	liste_contenu_static_texts={'Frequency of tone ',...
		'Number of harmonics ',...
		'Name of variable to sweep ',...
		'Type of variation',...
        'Number of points / Decade',...
        'From',...
        'To'};
elseif isequal(type_analysis,'.HBNOISE')	
	liste_contenu_static_texts={'Output ',...
		'Input source ',...
		'Type of variation',...
        'Number of points / Decade',...
        'From',...
        'To'};
else	
	liste_contenu_static_texts={'Name of source',...
		'START = ',...
		'STOP = ',...
		'STEP = '};
end		

[~,taille]=size(liste_contenu_static_texts);
handles.staticText=zeros(1,taille);
ratio=(pos_panel_analysis(4)-20)/taille;
for i=1:taille
	 handles.staticText(i)= uicontrol('Style','text',...
		'String',liste_contenu_static_texts{1,i},...
		'Parent',handles.panel_analysis,...
		'Position',[0,(pos_panel_analysis(4))-i*ratio,...
		(pos_panel_analysis(3)/2)-10,15]);
end

%On génère les edit texts
handles.editText=zeros(1,taille);
for i=1:taille
	if i==1&&isequal(type_analysis,'.DC') %On génère le popmenu ?la bonne place
		[sources,~]=SourceExtractor(getappdata(0,'path_file'));
		handles.editText(i)=uicontrol('Style','popupmenu',...
			'String',sources,...
			'Parent',handles.panel_analysis,...
			'Position',[pos_panel_analysis(3)/2,...
			(pos_panel_analysis(4))-i*ratio,...
			(pos_panel_analysis(3)/2)-50,20],...
			'BackgroundColor','white');
	elseif i==5&&isequal(type_analysis,'.AC')
		handles.editText(i)=uicontrol('Style','popupmenu',...
			'String',{'LIN','DEC','OCT','POST'},...
			'Parent',handles.panel_analysis,...
			'Position',[pos_panel_analysis(3)/2,...
			(pos_panel_analysis(4))-i*ratio,...
			(pos_panel_analysis(3)/2)-50,20],...
			'BackgroundColor','white');
    elseif i==1&&isequal(type_analysis,'.LSTB')
        handles.editText(i)=uicontrol('Style','popupmenu',...
			'String',{'SINGLE','DIFF','COMM'},...
			'Parent',handles.panel_analysis,...
			'Position',[pos_panel_analysis(3)/2,...
			(pos_panel_analysis(4))-i*ratio,...
			(pos_panel_analysis(3)/2)-50,20],...
            'Callback',{pop_callback,handles},...
			'BackgroundColor','white');
    elseif i==3&&isequal(type_analysis,'.LSTB')
		handles.editText(i)=uicontrol('Style','edit',...
			'String','',...
			'Parent',handles.panel_analysis,...
			'Position',[pos_panel_analysis(3)/2,...
			(pos_panel_analysis(4))-i*ratio,...
			(pos_panel_analysis(3)/2)-50,20],...
            'enable','on',...
			'BackgroundColor','white');
	elseif i==4&&isequal(type_analysis,'.HB')
		handles.editText(i)=uicontrol('Style','popupmenu',...
			'String',{'LIN','DEC','OCT'},...
			'Parent',handles.panel_analysis,...
			'Position',[pos_panel_analysis(3)/2,...
			(pos_panel_analysis(4))-i*ratio,...
			(pos_panel_analysis(3)/2)-50,20],...
			'BackgroundColor','white');
	elseif i==3&&isequal(type_analysis,'.HBNOISE')
		handles.editText(i)=uicontrol('Style','popupmenu',...
			'String',{'LIN','DEC','OCT'},...
			'Parent',handles.panel_analysis,...
			'Position',[pos_panel_analysis(3)/2,...
			(pos_panel_analysis(4))-i*ratio,...
			(pos_panel_analysis(3)/2)-50,20],...
			'BackgroundColor','white');
	else
		handles.editText(i)=uicontrol('Style','edit',...
			'String','',...
			'Parent',handles.panel_analysis,...
			'Position',[pos_panel_analysis(3)/2,...
			(pos_panel_analysis(4))-i*ratio,...
			(pos_panel_analysis(3)/2)-50,20],...
			'BackgroundColor','white');
		%On place le petit V de Volt après les editTexts pour une analyse DC
		if isequal(type_analysis,'.DC')
			uicontrol('Style','text',...
				'String','Volts',...
				'Parent',handles.panel_analysis,...
				'Position',[pos_panel_analysis(3)/2+(pos_panel_analysis(3)/2)-40,...
				(pos_panel_analysis(4))-i*ratio,...
				10,15]);
		end
		%On place le petit Secondes après les editTexts pour une analyse TRANS
		if isequal(type_analysis,'.TRANS')
			uicontrol('Style','text',...
				'String','Secondes',...
				'Parent',handles.panel_analysis,...
				'Position',[pos_panel_analysis(3)/2+(pos_panel_analysis(3)/2)-40,...
				(pos_panel_analysis(4))-i*ratio,...
				10,15]);
		end	
    end

end




